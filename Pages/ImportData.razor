@page "/importdata"
@using SoilClassifier_Blazor.Models
@using System.IO
@using CsvHelper
@using System.Globalization

<PageTitle>Soil Classifier Import</PageTitle>
<div class="fileInputContainer">
    <h1>Import Data</h1>
    <InputFile OnChange="@LoadFiles" />
    <button class="btn btn-primary">Import Data</button>
    <div>@status</div>
    <table>
    <tr>
        <th>Sample ID</th>
        <th>Chainage</th>
        <th>Offset</th>
        <th>Depth</th>
        <th>Surface Type</th>
        <th>53mm</th>
        <th>19mm</th>
        <th>4.75mm</th>
        <th>2.36mm</th>
        <th>0.425mm</th>
        <th>0.075mm</th>
        <th>Moisture Content</th>
        <th>Plastic Limit</th>
        <th>Plasticity Index</th>
        <th>Linear Shrinkage</th>
        <th>Liquid Limit</th>
        <th>Color</th>
        <th>Client Name</th>
        <th>Project Name</th>
        <th>Project Number</th>
    </tr>
    @if (soilSamples != null)
    {
        @foreach (var sample in soilSamples)
        {
            <tr>
                <td>@sample.SampleID</td>
            </tr>
        }
    }  
    </table>
    <div>
        @if (soilSamples != null)
        {
            @foreach (var sample in soilSamples)
            {
                <p>sample.SampleID</p>
            }
        }
        
    </div>
</div>


@code {
    string status = "Waiting for file";
    IEnumerable<SoilSample>? soilSamples;
    private void LoadFiles(InputFileChangeEventArgs e)
    {
        status = "File Loaded";
        IBrowserFile loadedFile = e.File;
        var memoryStream = new MemoryStream();
        loadedFile.OpenReadStream().CopyToAsync(memoryStream);
        // TODO: Fix csv reading
        using (var reader = new StreamReader(memoryStream))
        using (var csv = new CsvReader(reader, CultureInfo.InvariantCulture))
        {
            csv.Context.RegisterClassMap<SampleMap>();
            soilSamples = csv.GetRecords<SoilSample>().ToList();
        }
    }
}
